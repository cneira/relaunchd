SOURCES = $(shell ls src/*.cc)
TEST_SOURCES = $(shell ls test/*.cc)

all: launchd launchctl

launchd: Makefile $(SOURCES)
	$(CXX) -I $(OBJDIR) -o $(OBJDIR)/$@ $(TARGET_CXXFLAGS) $(CXXFLAGS) $(SOURCES) $(TARGET_LDADD)

launchctl:
	ln -sf launchd launchctl

test-all: Makefile $(SOURCES) $(TEST_SOURCES)
	$(CXX) -I $(OBJDIR) -I $(OBJDIR)/src -o $(OBJDIR)/$@ \
	-DRELAUNCHD_UNIT_TESTS "-DTESTDIR=\"$(OBJDIR)/test\"" "-DTMPDIR=\"$(OBJDIR)/tmp\"" \
	$(TARGET_CXXFLAGS) $(CXXFLAGS) $(TEST_SOURCES) $(SOURCES) $(TARGET_LDADD)

install: launchd
	install -m 755 launchd $$DESTDIR$(PREFIX)/sbin
	ln -s $(PREFIX)/sbin/launchd $$DESTDIR$(PREFIX)/bin/launchctl
	install -d -m 755 $$DESTDIR/var/db/relaunchd
	install -d -m 755 $$DESTDIR/$(MANDIR)
	install -d -m 755 $$DESTDIR/$(MANDIR)/man8
	install -m 644 launchd.8 $$DESTDIR$(MANDIR)/man8/launchd.8
	install -d -m 755 $$DESTDIR/$(MANDIR)/man1
	install -m 644 man/launchctl.1 $$DESTDIR$(MANDIR)/man1/launchctl.1
	install -d -m 755 $$DESTDIR/$(MANDIR)/man5
	install -m 644 man/launchd.plist.5 $$DESTDIR$(MANDIR)/man5/launchd.plist.5

check: test-all
	./test-all -v

coverage-report: test-all
	./test-all
	lcov --capture --directory . --output-file coverage.info --exclude /Library/\* --exclude /opt/homebrew/\* --exclude $(OBJDIR)/test/\*
	genhtml coverage.info --output-directory coverage

clang-analyzer-report: clean
	scan-build -o ./scan-build --use-c++=clang++ --status-bugs -v $(MAKE) launchd

clean:
	rm -f launchd launchctl test-all *.8 *.gcda *.gcno
	rm -rf *.dSYM tmp coverage scan-build

distclean: clean
	rm -f Makefile config.h

format:
	clang-format -i src/*.cc src/*.h src/*.hpp
	# TODO: test/*.cc test/*.h test/*.hpp

.PHONY : all check clean clang-analyzer-report coverage-report distclean format install
