name: CI Linux Coverity

on:
  workflow_run:
    workflows: ["CI Linux"]
    types:
      - completed
  push:
    branches:
      - master
    paths:
      - '.github/workflows/ci-linux-coverity.yml'

jobs:
  linux-build-and-test:
    if: github.repository == 'mheily/relaunchd'
    timeout-minutes: 15
    strategy:
      fail-fast: false
    runs-on: ubuntu-20.04
    name: "ci-linux-coverity"
    steps:
      - uses: actions/checkout@v3

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            devscripts \
            fakeroot \
            gridsite-clients \
            nlohmann-json3-dev

      - name: Download coverity tool MD5
        run: |
          wget https://scan.coverity.com/download/linux64 \
            --post-data "token=${TOKEN}&project=`urlencode ${GITHUB_REPOSITORY}`&md5=1" \
            -O coverity_tool.tar.gz.md5
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Cache coverity tool
        uses: actions/cache@v2
        id: cache-coverity
        with:
          path: coverity_tool.tar.gz
          key: coverity-tool-cache-${{ hashFiles('coverity_tool.tar.gz.md5') }}

      - name: Download coverity tool
        if: ${{ steps.cache-coverity.outputs.cache-hit != 'true' }}
        run: |
          wget https://scan.coverity.com/download/linux64 \
            --post-data "token=${TOKEN}&project=`urlencode ${GITHUB_REPOSITORY}`" \
            -O coverity_tool.tar.gz
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Extract coverity tool
        run: |
          mkdir coverity_tool
          tar xzf coverity_tool.tar.gz --strip 1 -C coverity_tool

      - name: Install LLVM 10
        run: |
          sudo apt-get install -y --no-install-recommends clang-10 llvm-10
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 60 && sudo update-alternatives --set clang /usr/bin/clang-10
          sudo update-alternatives --install /usr/bin/llvm-symbolizer llvm-symbolizer /usr/bin/llvm-symbolizer-10 60 && sudo update-alternatives --set llvm-symbolizer /usr/bin/llvm-symbolizer-10

      - name: Configure build system
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug

      - name: Build relaunchd
        run: |
          export PATH=`pwd`/coverity_tool/bin:$PATH
          export CC=clang
          cov-configure --template --compiler clang --comptype clangcc
          cov-build --dir cov-int cmake --build ${{github.workspace}}/build

      - name: Display build result
        run: |
          cat /home/runner/work/relaunchd/relaunchd/cov-int/build-log.txt

      - name: Submit result
        run: |
          tar czf cov-int.tar.gz cov-int
          curl \
            --form token="$TOKEN" \
            --form email="mark@heily.com" \
            --form file=@cov-int.tar.gz \
            --form version="0.7.0" \
            --form description="${GITHUB_REPOSITORY}" \
            https://scan.coverity.com/builds?project=`urlencode ${GITHUB_REPOSITORY}`
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
